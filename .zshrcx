alias l=ls\ -G
alias ls=ls\ -G
alias ll=ls\ -l

## Colorize the grep command output for ease of use (good for log files)##
alias grep=grep\ --color=auto
alias egrep=egrep\ --color=auto
alias fgrep=fgrep\ --color=auto
alias .scp=scp\ -oStrictHostKeyChecking=no\ -oUserKnownHostsFile=/dev/null
alias .ssh=ssh\ -oStrictHostKeyChecking=no\ -oUserKnownHostsFile=/dev/null

alias d=docker
alias dexited=docker\ container\ ls\ -f\ 'status=exited'\ -f\ 'status=dead'\ -f\ 'status=created'
alias dprune=docker\ system\ prune\ -af\ --volumes
alias add=git\ add
alias commit=git\ commit
alias checkout=git\ checkout
alias pull=git\ pull
alias push=git\ push
alias p=pull
alias g=git\ status
alias branch=git\ branch
alias stash=git\ stash
alias merge=git\ merge
alias stashall=git\ stash\ --all
alias reset=git\ reset
alias pop=git\ stash\ pop
alias gs=git\ status
alias co=git\ checkout

alias ..=cd\ ..
alias .2=cd\ ../..
alias .3=cd\ ../../..
alias .4=cd\ ../../../..
alias .5=cd\ ../../../../..
alias guid="uuidgen | tr '[:upper:]' '[:lower:]' | sed 's/-//g'"


alias .gb=./gradlew\ build
alias .gcb=./gradlew\ clean\ build
alias .g=./gradlew

function .nvm() {
  nvm install $1 && nvm alias default $1
}

function prune-branches() {
    git fetch --prune && git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d 2>/dev/null
}

function create-branch() {
  git checkout -b $1
  git push -u origin $1
}

function delete-branch() {
  git branch -d $1
  git push origin --delete $1
}

function select-branch() {
  if [[ $1 == '-r' ]];
  then
    echo Fetching remote branches...
    branches=$(git branch -r | grep -v "origin/HEAD" | sed -e 's#^ *origin/##')
  else
    echo Fetching local branches...
    branches=$(git branch -l | sed 's#^[ \*]*##g')
  fi

  select branch in `echo $branches`;
  do
    git checkout $branch
    break
  done
}

function rename-branch() {
  CURR_BRANCH=$(git symbolic-ref --short HEAD)
  NEW_BRANCH=$1
  if [[ $# -eq 2 ]]; then
    CURR_BRANCH=$1
    NEW_BRANCH=$2
    git branch -m $1 $2
  else
    git branch -m $1
  fi

  git push origin :$CURR_BRANCH $NEW_BRANCH
  
  # in case of the upstream unset message: https://stackoverflow.com/a/46521967/12075726
} 

